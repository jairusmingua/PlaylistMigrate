// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  playlists     Playlist[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Playlist {
  id           String   @id @default(cuid())
  userId       String
  title        String
  description  String
  image        String?
  platform     Platform
  url          String
  songs        Song[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Song {
  id           String   @id @default(cuid())
  title        String
  artistId     String
  image        String?
  urls         Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  artist       Artist   @relation(fields: [artistId], references: [id])
  playlists    Playlist[]
  albums       Album[]
}

model Album {
  id           String   @id @default(cuid())
  title        String
  artistId     String
  albumId      String
  image        String?
  url          String
  songs        Song[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Artist {
  id           String   @id @default(cuid())
  name         String
  songs        Song[]
  image        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Platform{
  SPOTIFY
  YOUTUBE
}